//
//  UserAccountBalanceViewController.swift
//  TesteiOSV2_Rafael_Hieda
//
//  Created by Rafael  Hieda on 10/29/18.
//  Copyright (c) 2018 Rafael Hieda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserAccountBalanceDisplayLogic: class
{
    var vm : [Registry]? {get set}
    func displayRegistries()
}

class UserAccountBalanceViewController: UIViewController, UITableViewDataSource, UITableViewDelegate, UserAccountBalanceDisplayLogic {
    
    var interactor: UserAccountBalanceBusinessLogic?
    var userAccount : UserAccount?
    var vm : [Registry]? = [Registry]()
    
    @IBOutlet weak var nameTextField: UILabel!
    @IBOutlet weak var contaTextField: UILabel!
    @IBOutlet weak var SaldoTextField: UILabel!
    var accountBalance : AccountBalance?
    
    
  @IBOutlet weak var tableView: UITableView!

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  public func setup()
  {
    let viewController = self
    let interactor = UserAccountBalanceInteractor()
    let presenter = UserAccountBalancePresenter()
    viewController.interactor = interactor
    interactor.presenter = presenter
    presenter.viewController = viewController

  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    loadRegistry()
    userAccountCardSetup()
  }
    
    override func viewWillAppear(_ animated: Bool) {
    }
    
    override func viewDidAppear(_ animated: Bool) {
        viewControllerSetup()
        displayRegistries()
    }
    
    //MARK : ViewController Events
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        //return (accountBalance?.statementList?.count)!
        if let count = vm?.count {
            return count
        } else {
            return 0
        }
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "RegistryCell", for: indexPath) as! RegistryTableViewCell
        
        let registry = vm![indexPath.row]
//        let registry : Registry = (accountBalance?.statementList![indexPath.row])!
        
        cell.dataTextField.text = registry.title
        cell.descricaoTextField.text = registry.description
        cell.dataTextField.text = registry.date
        guard let value = registry.value else {
            return cell
        }
        cell.pagamentoTextField.text = String.valueToBRL(value: value)
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        return "Recentes"
    }
    
    func viewControllerSetup() {
        self.tableView.dataSource = self
        self.tableView.delegate = self
        self.tableView.register(UINib.init(nibName: "RegistryCell", bundle:nil), forCellReuseIdentifier: "RegistryCell")
    }
    

    func loadRegistry() {
        if let id = userAccount?.userId {
            self.interactor?.loadRegistry(id: id)
        }
    }
    
    func displayRegistries() {
        tableView.reloadData()
    }
    
    func userAccountCardSetup() {
        if let name = userAccount?.name, let accountNumber = userAccount?.bankAccount, let balance = userAccount?.balance, let agency = userAccount?.agency {
            nameTextField.text = name
            contaTextField.text = "\(accountNumber) / \(agency)"
            SaldoTextField.text = String.valueToBRL(value: balance)
        }
    }
}

fileprivate extension String {
    static func valueToBRL(value : Double) -> String {
       return String(format: "R$ %.02f", value)
    }
}
